{"version":3,"sources":["modal.js","view.js","completedview.js","App.js","index.js"],"names":["options","Modal","props","className","task","rows","type","maxLength","value","desc","onChange","e","k","chrlg","dsccschange","_key","lenght","cpmstate","cardst","target","cardstateChange","map","option","startdt","enddt","onClick","preventDefault","save","savehandle","closemod","closehandle","View","vtask","vdesc","vstatus","vstartdt","venddt","viewmod","Completedview","cvtask","cvdesc","cvstatus","cvstartdt","cvenddt","cmplviewmod","App","wrapperRef","useRef","useState","keycount","setKeycount","name","setName","ele","setEle","clickstate","setClickstate","modelstate","setModelstate","setCharele","charleft","setCharleft","currentdate","setCurrentdate","enddate","setEnddate","cardstate","setCardstate","descele","setDescele","descstate","setDescstate","viewstate","setViewstate","completname","setCompletname","completclickstate","setCompletclickstate","completviewstate","setCompletviewstate","useEffect","document","addEventListener","handleClickOutside","removeEventListener","event","current","contains","rstst","push","resetst","getcharlenght","charcount","length","closemodal","p","clmod","cdst","statecard","savemodal","descstt","svmod","descste","cmpnm","result","find","key","inpcom","nmsbm","filter","el","isodates","Date","toISOString","cmenddate","cmpvwst","closeview","clvw","closecmplview","cvwarr","ref","placeholder","console","log","namelist","input","isodate","ctdate","ennddt","modst","vwst","crdst","slice","reverse","_el","i","newarr","handlemenu","viewarr","vdarr","viewmodal","modarr","shmdarr","descload","undefined","rmglg","showmodal","names","delarr","handledelete","_elem","cmclk","handlecomplettmenu","cviewarr","cvdarr","viewcmpmodal","cmpnames","cmpdelarr","completdelete","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b381fb57.chunk.js","sourcesContent":["\r\nimport React, { Children } from \"react\";\r\nimport './modal.css';\r\nconst options =  [\"Inprogress\",\"Completed\"]\r\nfunction Modal(props) {\r\n\r\nfunction savehandle(e, k) {\r\n    e.preventDefault();\r\n    props.save(e, k);\r\n}\r\nfunction dsccschange(e, k) {\r\n    props.chrlg(e, k);\r\n}\r\nfunction closehandle(e, k) {\r\n    e.preventDefault();\r\n    props.closemod(k);\r\n}\r\n\r\nfunction cardstateChange(e, k) {\r\n    props.cardst(e.target.value, k);\r\n}\r\n\r\nreturn(\r\n    <form>\r\n       <div className=\"modeldata\">\r\n          <form>\r\n              <div className=\"taskname\">\r\n                <label>\r\n                    Name:\r\n                </label>\r\n                <div>{props.task}</div>\r\n              </div>\r\n              <div className=\"taskDesc\">\r\n                <label>\r\n                    Description:\r\n                </label>\r\n                <div>\r\n                <textarea\r\n                    rows={6}\r\n                    type=\"text\"\r\n                    maxLength=\"200\"\r\n                    value = {props.desc}\r\n                    onChange={(e) => dsccschange(e, props._key)}\r\n                />\r\n                <label>Characters left:</label>\r\n                <p>{props.lenght}</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"taskstatus\">\r\n                <label>\r\n                     Status:    \r\n                </label>\r\n                 <select value={props.cpmstate} onChange={(e) => cardstateChange(e, props._key)}>\r\n                     {options.map((option) => (\r\n                     <option key={option} value={option}>\r\n                     {option}\r\n                    </option>\r\n                     ))}\r\n                 </select>\r\n              </div>\r\n              <div className=\"taskstart\">\r\n                 <label>\r\n                     Created on:\r\n                 </label>\r\n                 <div>{props.startdt}</div>\r\n              </div>   \r\n              <div className=\"taskend\">\r\n                 <label>\r\n                     Closed on:\r\n                 </label>\r\n                 <div>{props.enddt}</div>\r\n              </div>\r\n              <div className=\"savebutton\">  \r\n                  <button onClick={(e) => savehandle(e, props._key)}>save</button>\r\n              </div> \r\n              <div className=\"closebutton\">  \r\n                  <button  onClick={(e) => closehandle(e, props._key)}>close</button>\r\n              </div>              \r\n          </form>\r\n       </div>\r\n    </form>\r\n)\r\n}\r\n\r\n\r\nexport default Modal;","\r\nimport React, { Children } from \"react\";\r\nimport './view.css';\r\nfunction View(props) {\r\n\r\n\r\nfunction closehandle(e, k) {\r\n    e.preventDefault();\r\n    props.viewmod(k);\r\n}\r\n\r\nreturn(\r\n    <form>\r\n       <div className=\"viewdata\">\r\n          <form>\r\n              <div className=\"taskname\">\r\n                <label>\r\n                    Name:\r\n                </label>\r\n                <div>{props.vtask}</div>\r\n              </div>\r\n              <div className=\"taskDesc\">\r\n                <label>\r\n                    Description:\r\n                </label>\r\n                <p>{props.vdesc}</p>\r\n              </div>\r\n              <div className=\"taskstatus\">\r\n                <label>\r\n                     Status:    \r\n                </label>\r\n                <p>{props.vstatus}</p>\r\n               </div> \r\n              <div className=\"taskstart\">\r\n                 <label>\r\n                     Created on:\r\n                 </label>\r\n                 <div>{props.vstartdt}</div>\r\n              </div>   \r\n              <div className=\"taskend\">\r\n                 <label>\r\n                     Closed on:\r\n                 </label>\r\n                 <div>{props.venddt}</div>\r\n              </div>\r\n              <div className=\"vclosebutton\">  \r\n                  <button  onClick={(e) => closehandle(e, props._key)}>close</button>\r\n              </div>              \r\n          </form>\r\n       </div>\r\n    </form>\r\n)\r\n}\r\n\r\n\r\nexport default View;","\r\nimport React, { Children } from \"react\";\r\nimport './completedview.css';\r\nfunction Completedview(props) {\r\n\r\n\r\nfunction closehandle(e, k) {\r\n    e.preventDefault();\r\n    props.cmplviewmod(k);\r\n}\r\n\r\nreturn(\r\n    <form>\r\n       <div className=\"completedviewdata\">\r\n          <form>\r\n              <div className=\"taskname\">\r\n                <label>\r\n                    Name:\r\n                </label>\r\n                <div>{props.cvtask}</div>\r\n              </div>\r\n              <div className=\"taskDesc\">\r\n                <label>\r\n                    Description:\r\n                </label>\r\n                <p>{props.cvdesc}</p>\r\n              </div>\r\n              <div className=\"taskstatus\">\r\n                <label>\r\n                     Status:    \r\n                </label>\r\n                <p>{props.cvstatus}</p>\r\n               </div> \r\n              <div className=\"taskstart\">\r\n                 <label>\r\n                     Created on:\r\n                 </label>\r\n                 <div>{props.cvstartdt}</div>\r\n              </div>   \r\n              <div className=\"taskend\">\r\n                 <label>\r\n                     Closed on:\r\n                 </label>\r\n                 <div>{props.cvenddt}</div>\r\n              </div>\r\n              <div className=\"cvclosebutton\">  \r\n                  <button  onClick={(e) => closehandle(e, props._key)}>close</button>\r\n              </div>              \r\n          </form>\r\n       </div>\r\n    </form>\r\n)\r\n}\r\n\r\n\r\nexport default Completedview;","import React, { useState, useRef, useEffect} from 'react';\nimport './App.css';\nimport Modal from \"./modal\"\nimport View from \"./view\"\nimport Completedview from \"./completedview\"\n\n\n\nfunction App() {\n  const wrapperRef = useRef(null);  \n  const [keycount, setKeycount] = useState(0);\n  const [name, setName] = useState([]);\n  const [ele, setEle] = useState('');\n  const [clickstate, setClickstate] = useState([]);\n  const [modelstate, setModelstate] = useState([]);\n  const [charele, setCharele] = useState('');\n  const [charleft, setCharleft] = useState([]);\n  const [currentdate, setCurrentdate] = useState('');\n  const [enddate, setEnddate] = useState([]);\n  const [cardstate, setCardstate] = useState([]);\n  const [descele, setDescele] = useState('');\n  const [descstate, setDescstate] = useState([]);\n  const [viewstate, setViewstate] = useState([]);\n  const [completname, setCompletname] = useState([]);\n  const [completclickstate, setCompletclickstate] = useState([]);\n  const [completviewstate, setCompletviewstate] = useState([]);\n  \n  useEffect(() => {\n    document.addEventListener(\"click\", handleClickOutside, false);\n    return () => {\n      document.removeEventListener(\"click\", handleClickOutside, false);\n    };\n  }, []);\n\n\n const handleClickOutside = event => {\n    if (wrapperRef.current && !wrapperRef.current.contains(event.target)) {\n      const rstst = [...clickstate]\n      rstst.push(false);\n      setClickstate(rstst);\n      const resetst = [...completclickstate]\n      resetst.push(false);\n      setCompletclickstate(resetst);\n    }\n  };\n  function keyChange(e) {\n    setEle(e.target.value);\n  }\n\n  function handleChange(event) {\n    if(ele === \"\"){\n      event.preventDefault();\n     console.log(\"Enter something\");\n    }\n    else{\n    event.preventDefault();\n    const namelist= [...name];\n    let input = { key: keycount, value: ele}\n    var current = new Date();\n    var isodate = current.toISOString();\n    const ctdate = [...currentdate];\n    ctdate[keycount] = isodate;\n    setCurrentdate(ctdate);\n    const ennddt = [...enddate];\n    ennddt.push(\"Yet to Close\");\n    setEnddate(ennddt);\n    setKeycount(keycount + 1);\n    namelist.push(input);\n    setName(namelist);\n    setEle('');\n    //const clkst= [...clickstate]\n    //clkst.push(false);\n    //setClickstate(clkst);\n    const modst= [...modelstate]\n    modst.push(false);\n    setModelstate(modst); \n    const vwst = [...viewstate]\n    vwst.push(false);\n    setViewstate(vwst);\n    const crdst = [...cardstate];\n    crdst[keycount] = \"Inprogress\"\n    setCardstate(crdst); \n    }\n }\n\n\nfunction handlemenu(key){\n  const newarr = [...clickstate]\n  newarr[key] = !newarr[key];\n  setClickstate(newarr);\n}\n\nfunction handledelete(key){\n  let names = [...name];\n  names = names.filter(el => el.key !== key);\n  setName(names); \n  const delarr = [...clickstate]\n  delarr[key] = !delarr[key];\n  setClickstate(delarr);\n}\n\nfunction showmodal(key) {\n  const modarr= [...modelstate]\n  modarr[key] = !modarr[key];\n  setModelstate(modarr);\n  const shmdarr = [...clickstate]\n  shmdarr[key] = !shmdarr[key];\n  setClickstate(shmdarr);\n  setCharleft(200);    \n  const cdst = [...cardstate];\n  cdst[key] = \"Inprogress\"\n  setCardstate(cdst); \n  const  descload = [...descstate];\n  setDescele(descload[key]);\n  if(descstate[key] === undefined) {\n\n    setCharele(200);\n  }else{\n    const rmglg = 200 - descstate[key].length;\n    setCharele(rmglg);\n  \n    setCharleft(rmglg);\n  }\n}\n\nfunction getcharlenght(e, k) {\n  const charcount = e.target.value.length;\n  const charlength = 200 - charcount;\n  setCharleft(charlength);\n  setDescele(e.target.value);\n}\n\nfunction closemodal(p) {\n  const clmod = [...modelstate];\n  clmod[p] = !clmod[p];\n  setModelstate(clmod);\n  const cdst = [...cardstate];\n  cdst[p] = \"Inprogress\"\n  setCardstate(cdst); \n  setDescele('');\n}\n\nfunction statecard(e, k) {\n  const cdst = [...cardstate];\n  cdst[k] = e;\n  setCardstate(cdst);\n\n}\n\nfunction savemodal(e, k) {\n if (cardstate[k] === \"Inprogress\"){\n  const  descstt = [...descstate];\n  descstt[k] = descele;\n  setDescstate(descstt);\n  const svmod = [...modelstate];\n  svmod[k] = !svmod[k];\n  setModelstate(svmod);\n } else {\n  const  descste = [...descstate];\n  descste[k] = descele;\n  setDescstate(descste);\n   const cmpnm = [ ...completname];\n   const mvnm = [...name]\n   var result = mvnm.find( ({ key }) => key === k);\n   let inpcom = { key: k, value: result.value}\n   cmpnm.push(inpcom);\n   setCompletname(cmpnm);\n   let nmsbm = [...name];\n   nmsbm = nmsbm.filter(el => el.key !== k);\n   setName(nmsbm);\n   var current = new Date();\n   var isodates = current.toISOString();\n   const cmenddate = [...enddate];\n   cmenddate[k] = isodates;\n   setEnddate(cmenddate);\n   const svmod = [...modelstate];\n   svmod[k] = !svmod[k];\n   setModelstate(svmod);\n   const cmpvwst = [...completviewstate]\n   cmpvwst.push(false);\n   setCompletviewstate(cmpvwst);\n }\n}\n\nfunction viewmodal(k) {\n  const viewarr= [...viewstate]\n  viewarr[k] = !viewarr[k];\n  setViewstate(viewarr);\n  const vdarr = [...clickstate]\n  vdarr[k] = !vdarr[k];\n  setClickstate(vdarr);\n}\n\nfunction closeview(p) {\n  const clvw = [...viewstate];\n  clvw[p] = !clvw[p];\n  setViewstate(clvw);\n}\n\nfunction handlecomplettmenu(k) {\n  const cmclk = [...completclickstate]\n  cmclk[k] = !cmclk[k];\n  setCompletclickstate(cmclk);\n}\n\nfunction viewcmpmodal(k) {\n  const cviewarr= [...completviewstate]\n  cviewarr[k] = !cviewarr[k];\n  setCompletviewstate(cviewarr);\n  const cvdarr = [...completclickstate]\n  cvdarr[k] = !cvdarr[k];\n  setCompletclickstate(cvdarr);\n}\n\nfunction closecmplview(k) {\n  const cvwarr= [...completviewstate]\n  cvwarr[k] = !cvwarr[k];\n  setCompletviewstate(cvwarr);\n}\n\nfunction completdelete(k){\n  let cmpnames = [...completname];\n  cmpnames = cmpnames.filter(el => el.key !== k);\n  setCompletname(cmpnames); \n  const cmpdelarr = [...completclickstate]\n  cmpdelarr[k] = !cmpdelarr[k];\n  setCompletclickstate(cmpdelarr);\n}\n  return (\n    <div className=\"Tasklist\" ref={wrapperRef}>\n       <form>\n                <div className=\"header\" >\n                    <h3>ToDo list</h3>\n                    <form>\n                    <input type=\"text\"\n                           placeholder=\"Your Tasks\"\n                           value={ele}\n                           onChange={keyChange}\n                           />\n                     <button type=\"submit\" onClick={handleChange}>Add</button>\n                     </form>\n                 </div> \n                 <h6 className=\"heading_pending\">InProgress:</h6>\n                 <form className=\"Pendingform\">\n                 <div className=\"body\">\n                      {\n                          name.slice(0).reverse().map((_el, i) => {\n                            return <div>\n                                    <ul className=\"card_pending\">\n                                      <div>{_el.value}</div>\n                                      <button type=\"button\" className=\"button\" onClick={() => handlemenu(_el.key)}>\n                                      ☰\n                                      </button>\n                                    </ul>\n                                     {clickstate[_el.key] === true && modelstate[_el.key] === false &&\n                                      <div className=\"dropdown\">\n                                        <ul>\n                                        <li onClick={() => viewmodal(_el.key)}>View</li>\n                                          <li onClick={() => showmodal(_el.key)}>Edit</li>\n                                          <li onClick={() => handledelete(_el.key)}>Delete</li>\n                                        </ul>\n                                      </div>\n                                      }\n                                      {modelstate[_el.key] === true &&\n                                      <Modal className=\"modpop\" \n                                             task={_el.value} \n                                             chrlg={getcharlenght} \n                                             lenght={charleft} \n                                             startdt={currentdate[_el.key]} \n                                             enddt={enddate[_el.key]} \n                                             _key={_el.key} \n                                             closemod={closemodal} \n                                             cardst={statecard} \n                                             cpmstate={cardstate[_el.key]} \n                                             desc={descele} \n                                             save={savemodal}/>\n                                      }\n                                      {viewstate[_el.key] === true &&\n                                      <View className=\"viewpop\" \n                 \n                                      vtask={_el.value} \n                                             _key={_el.key} \n                                             vstartdt={currentdate[_el.key]}  \n\t\t\t\t\t\t\t\t\t\t\t                       venddt={enddate[_el.key]} \n                                             vstatus={cardstate[_el.key]} \n                                             vdesc={descstate[_el.key]} \n\t\t\t\t\t\t\t\t\t\t\t                       viewmod={closeview}/>\n                                        }\n                                      \n                                      </div>\n                          })\n                        }\n                 </div>\n                </form>\n                  <h6 className=\"heading_Completed\">Completed:</h6>\n                    <form className=\"Completedform\">\n                      <div className=\"body\">\n                      {\n                          completname.slice(0).reverse().map((_elem, i) => {\n                            return <div>\n                                    <ul className=\"card_Complete\">\n                                      <div>{_elem.value}</div>\n                                      <button type=\"button\" className=\"Completebutton\" onClick={() => handlecomplettmenu(_elem.key)}>\n                                      ☰\n                                      </button>  \n                                    </ul>\n                                    {completclickstate[_elem.key] === true &&   \n                                    <div className=\"completdropdown\">                            \n                                        <ul>\n                                          <li onClick={() => viewcmpmodal(_elem.key)}>View</li>\n                                          <li onClick={() => completdelete(_elem.key)}>Delete</li>\n                                        </ul>\n                                      </div>\n                                      }\n                                      {completviewstate[_elem.key] === true &&\n                                          <Completedview className=\"completpop\" \n                                                cvtask={_elem.value} \n                                                _key={_elem.key} \n                                                cvstartdt={currentdate[_elem.key]}  \n\t                                              cvenddt={enddate[_elem.key]} \n                                                cvstatus={cardstate[_elem.key]} \n                                                cvdesc={descstate[_elem.key]} \n                                                cmplviewmod={closecmplview}/>\n                                       }\n                                    </div>\n                            })\n                          }  \n                      </div>\n                    </form>\n        </form>\n      \n\n    </div>\n    \n\n  );\n  \n  \n  \n}\n\n\n\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}