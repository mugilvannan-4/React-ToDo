{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactJS\\\\react-to-do\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport './App.css';\nimport Modal from \"./modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const wrapperRef = useRef(null);\n  const [name, setName] = useState([]);\n  const [ele, setEle] = useState('');\n  const [clickstate, setClickstate] = useState([]);\n  const [modelstate, setModelstate] = useState([]);\n  const [charleft, setCharleft] = useState(200);\n  const [currentdate, setCurrentdate] = useState('');\n  const [enddate, setEnddate] = useState('Yet to close');\n  const [cardstate, setCardstate] = useState([]);\n  const [descele, setDescele] = useState('');\n  const [descstate, setDescstate] = useState([]);\n  useEffect(() => {\n    document.addEventListener(\"click\", handleClickOutside, false);\n    return () => {\n      document.removeEventListener(\"click\", handleClickOutside, false);\n    };\n  }, []);\n\n  const handleClickOutside = event => {\n    if (wrapperRef.current && !wrapperRef.current.contains(event.target)) {\n      const rstst = [...clickstate];\n      rstst.push(false);\n      setClickstate(rstst);\n    }\n  };\n\n  function keyChange(e) {\n    setEle(e.target.value);\n  }\n\n  function handleChange(event) {\n    event.preventDefault();\n    const namelist = [...name];\n    let input = {\n      key: namelist.length,\n      value: ele\n    };\n    namelist.push(input);\n    setName(namelist);\n    setEle('');\n    var current = new Date();\n    var isodate = current.toISOString();\n    setCurrentdate(isodate); //const clkst= [...clickstate]\n    //clkst.push(false);\n    //setClickstate(clkst);\n\n    const modst = [...modelstate];\n    modst.push(false);\n    setModelstate(modst);\n  }\n\n  function handlemenu(key) {\n    const newarr = [...clickstate];\n    newarr[key] = !newarr[key];\n    setClickstate(newarr);\n  }\n\n  function handledelete(key) {\n    let names = [...name];\n    names = names.filter(el => el.key !== key);\n    setName(names);\n    const delarr = [...clickstate];\n    delarr[key] = !delarr[key];\n    setClickstate(delarr);\n  }\n\n  function showmodal(key) {\n    const modarr = [...modelstate];\n    modarr[key] = !modarr[key];\n    setModelstate(modarr);\n    const shmdarr = [...clickstate];\n    shmdarr[key] = !shmdarr[key];\n    setClickstate(shmdarr);\n    setCharleft(200);\n    const cdst = [...cardstate];\n    cdst[key] = \"Inprogress\";\n    setCardstate(cdst);\n    const descload = [...descstate];\n    setDescele(descload[key]);\n  }\n\n  function getcharlenght(e, k) {\n    const charcount = e.target.value.length;\n    const charlength = 200 - charcount;\n    setCharleft(charlength);\n    setDescele(e.target.value);\n  }\n\n  function closemodal(p) {\n    const clmod = [...modelstate];\n    clmod[p] = !clmod[p];\n    setModelstate(clmod);\n    const cdst = [...cardstate];\n    cdst[p] = \"Inprogress\";\n    setCardstate(cdst);\n    setDescele('');\n  }\n\n  function statecard(e, k) {\n    console.log(e, k);\n    const cdst = [...cardstate];\n    cdst[k] = e;\n    console.log(cdst[k]);\n    setCardstate(cdst);\n  }\n\n  function savemodal(e, k) {\n    if (cardstate[k] === \"Inprogress\") {\n      const descstt = [...descstate];\n      descstt[k] = descele;\n      setDescstate(descstt);\n      const svmod = [...modelstate];\n      svmod[k] = !svmod[k];\n      setModelstate(svmod);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Tasklist\",\n    ref: wrapperRef,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Task list\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Your Tasks\",\n          value: ele,\n          onChange: keyChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          onClick: handleChange,\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        className: \"heading_pending\",\n        children: \"InProgress:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"Pendingform\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"body\",\n          children: name.slice(0).reverse().map((_el, i) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"card_pending\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: _el.value\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 39\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"button\",\n                  onClick: () => handlemenu(_el.key),\n                  children: \"\\u2630\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 39\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 37\n              }, this), clickstate[_el.key] === true && modelstate[_el.key] === false && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"dropdown\",\n                children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                    onClick: () => showmodal(_el.key),\n                    children: \"Edit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 153,\n                    columnNumber: 43\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    onClick: () => handledelete(_el.key),\n                    children: \"Delete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 154,\n                    columnNumber: 43\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 39\n              }, this), modelstate[_el.key] === true && /*#__PURE__*/_jsxDEV(Modal, {\n                className: \"modpop\",\n                task: _el.value,\n                chrlg: getcharlenght,\n                lenght: charleft,\n                startdt: currentdate,\n                enddt: enddate,\n                _key: _el.key,\n                closemod: closemodal,\n                cardst: statecard,\n                cpmstate: cardstate[_el.key],\n                desc: descele,\n                save: savemodal\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 39\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 36\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 18\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        className: \"heading_Completed\",\n        children: \"Completed:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"Completedform\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"body\",\n          children: /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: \"Very soon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 8\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Svo9fpemGzpM5+8GH1tbEHVvJHY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/ReactJS/react-to-do/src/App.js"],"names":["React","useState","useRef","useEffect","Modal","App","wrapperRef","name","setName","ele","setEle","clickstate","setClickstate","modelstate","setModelstate","charleft","setCharleft","currentdate","setCurrentdate","enddate","setEnddate","cardstate","setCardstate","descele","setDescele","descstate","setDescstate","document","addEventListener","handleClickOutside","removeEventListener","event","current","contains","target","rstst","push","keyChange","e","value","handleChange","preventDefault","namelist","input","key","length","Date","isodate","toISOString","modst","handlemenu","newarr","handledelete","names","filter","el","delarr","showmodal","modarr","shmdarr","cdst","descload","getcharlenght","k","charcount","charlength","closemodal","p","clmod","statecard","console","log","savemodal","descstt","svmod","slice","reverse","map","_el","i"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect} from 'react';\nimport './App.css';\nimport Modal from \"./modal\"\n\n\n\nfunction App() {\n  const wrapperRef = useRef(null);  \n  const [name, setName] = useState([]);\n  const [ele, setEle] = useState('');\n  const [clickstate, setClickstate] = useState([]);\n  const [modelstate, setModelstate] = useState([]);\n  const [charleft, setCharleft] = useState(200);\n  const [currentdate, setCurrentdate] = useState('');\n  const [enddate, setEnddate] = useState('Yet to close')\n  const [cardstate, setCardstate] = useState([]);\n  const [descele, setDescele] = useState('');\n  const [descstate, setDescstate] = useState([]);\n\n  \n  useEffect(() => {\n    document.addEventListener(\"click\", handleClickOutside, false);\n    return () => {\n      document.removeEventListener(\"click\", handleClickOutside, false);\n    };\n  }, []);\n\n\n const handleClickOutside = event => {\n    if (wrapperRef.current && !wrapperRef.current.contains(event.target)) {\n      const rstst = [...clickstate]\n      rstst.push(false);\n      setClickstate(rstst);\n    }\n  };\n  function keyChange(e) {\n    setEle(e.target.value);\n  }\n\n  function handleChange(event) {\n    event.preventDefault();\n    const namelist= [...name];\n    let input = { key: namelist.length, value: ele}\n    namelist.push(input);\n    setName(namelist);\n    setEle('');\n    var current = new Date();\n    var isodate = current.toISOString();\n    setCurrentdate(isodate);\n    //const clkst= [...clickstate]\n    //clkst.push(false);\n    //setClickstate(clkst);\n    const modst= [...modelstate]\n    modst.push(false);\n    setModelstate(modst);  \n }\n\n\nfunction handlemenu(key){\n  const newarr = [...clickstate]\n  newarr[key] = !newarr[key];\n  setClickstate(newarr);\n}\n\nfunction handledelete(key){\n  let names = [...name];\n  names = names.filter(el => el.key !== key);\n  setName(names); \n  const delarr = [...clickstate]\n  delarr[key] = !delarr[key];\n  setClickstate(delarr);\n}\n\nfunction showmodal(key) {\n  const modarr= [...modelstate]\n  modarr[key] = !modarr[key];\n  setModelstate(modarr);\n  const shmdarr = [...clickstate]\n  shmdarr[key] = !shmdarr[key];\n  setClickstate(shmdarr);\n  setCharleft(200);    \n  const cdst = [...cardstate];\n  cdst[key] = \"Inprogress\"\n  setCardstate(cdst); \n  const  descload = [...descstate];\n  setDescele(descload[key]);\n\n}\n\nfunction getcharlenght(e, k) {\n  const charcount = e.target.value.length;\n  const charlength = 200 - charcount;\n  setCharleft(charlength);\n  setDescele(e.target.value);\n}\n\nfunction closemodal(p) {\n  const clmod = [...modelstate];\n  clmod[p] = !clmod[p];\n  setModelstate(clmod);\n  const cdst = [...cardstate];\n  cdst[p] = \"Inprogress\"\n  setCardstate(cdst); \n  setDescele('');\n}\n\nfunction statecard(e, k) {\n  console.log(e, k)\n  const cdst = [...cardstate];\n  cdst[k] = e;\n  console.log(cdst[k])\n  setCardstate(cdst);\n\n}\n\nfunction savemodal(e, k) {\n if (cardstate[k] === \"Inprogress\"){\n  const  descstt = [...descstate];\n  descstt[k] = descele;\n  setDescstate(descstt);\n  const svmod = [...modelstate];\n  svmod[k] = !svmod[k];\n  setModelstate(svmod);\n }\n}\n  return (\n    <div className=\"Tasklist\" ref={wrapperRef}>\n       <form>\n                <div className=\"header\" >\n                    <h3>Task list</h3>\n                    <input type=\"text\"\n                           placeholder=\"Your Tasks\"\n                           value={ele}\n                           onChange={keyChange}\n                           />\n                     <button type=\"submit\" onClick={handleChange}>Add</button>\n                 </div> \n                 <h6 className=\"heading_pending\">InProgress:</h6>\n                 <form className=\"Pendingform\">\n                 <div className=\"body\">\n                      {\n                          name.slice(0).reverse().map((_el, i) => {\n                            return <div>\n                                    <ul className=\"card_pending\">\n                                      <div>{_el.value}</div>\n                                      <button type=\"button\" className=\"button\" onClick={() => handlemenu(_el.key)}>\n                                      ☰\n                                      </button>\n                                    </ul>\n                                     {clickstate[_el.key] === true && modelstate[_el.key] === false &&\n                                      <div className=\"dropdown\">\n                                        <ul>\n                                          <li onClick={() => showmodal(_el.key)}>Edit</li>\n                                          <li onClick={() => handledelete(_el.key)}>Delete</li>\n                                        </ul>\n                                      </div>\n                                      }\n                                      {modelstate[_el.key] === true &&\n                                      <Modal className=\"modpop\" \n                                             task={_el.value} \n                                             chrlg={getcharlenght} \n                                             lenght={charleft} \n                                             startdt={currentdate} \n                                             enddt={enddate} \n                                             _key={_el.key} \n                                             closemod={closemodal} \n                                             cardst={statecard} \n                                             cpmstate={cardstate[_el.key]} \n                                             desc={descele} \n                                             save={savemodal}/>\n                                      }\n                                      </div>\n                          })\n                        }\n                 </div>\n                </form>\n                  <h6 className=\"heading_Completed\">Completed:</h6>\n                    <form className=\"Completedform\">\n                      <div className=\"body\">\n                        <h6>Very soon</h6>\n                      </div>\n                    </form>\n        </form>\n      \n\n    </div>\n    \n\n  );\n  \n  \n  \n}\n\n\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}