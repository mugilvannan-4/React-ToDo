{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactJS\\\\react-to-do\\\\src\\\\modal.js\";\nimport React, { Children } from \"react\";\nimport './modal.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = [\"Inprogress\", \"Completed\"];\n\nfunction Modal(props) {\n  function savehandle(e, k) {\n    e.preventDefault();\n    console.log(\"clicked\");\n    props.save(e, k);\n  }\n\n  function dsccschange(e, k) {\n    props.chrlg(e, k);\n  }\n\n  function closehandle(e, k) {\n    e.preventDefault();\n    props.closemod(k);\n  }\n\n  function cardstateChange(e, k) {\n    props.cardst(e.target.value, k);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modeldata\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"taskname\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: props.task\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"taskDesc\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Description:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n              rows: 6,\n              type: \"text\",\n              maxLength: \"200\",\n              value: props.desc,\n              onChange: e => dsccschange(e, props._key)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Characters left:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: props.lenght\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"taskstatus\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Status:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: props.cpmstate,\n            onChange: e => cardstateChange(e, props._key),\n            children: options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: option,\n              children: option\n            }, option, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 22\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 18\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"taskstart\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Created on:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 18\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: props.startdt\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 18\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"taskend\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Closed on:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 18\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: props.enddt\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 18\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"savebutton\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: e => savehandle(e, props._key),\n            children: \"save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"closebutton\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: e => closehandle(e, props._key),\n            children: \"close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 8\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Modal;\nexport default Modal;\n\nvar _c;\n\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"sources":["D:/ReactJS/react-to-do/src/modal.js"],"names":["React","Children","options","Modal","props","savehandle","e","k","preventDefault","console","log","save","dsccschange","chrlg","closehandle","closemod","cardstateChange","cardst","target","value","task","desc","_key","lenght","cpmstate","map","option","startdt","enddt"],"mappings":"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","sourcesContent":["\r\nimport React, { Children } from \"react\";\r\nimport './modal.css';\r\nconst options =  [\"Inprogress\",\"Completed\"]\r\nfunction Modal(props) {\r\n\r\nfunction savehandle(e, k) {\r\n    e.preventDefault();\r\n    console.log(\"clicked\")\r\n    props.save(e, k);\r\n}\r\nfunction dsccschange(e, k) {\r\n    props.chrlg(e, k);\r\n}\r\nfunction closehandle(e, k) {\r\n    e.preventDefault();\r\n    props.closemod(k);\r\n}\r\n\r\nfunction cardstateChange(e, k) {\r\n    props.cardst(e.target.value, k);\r\n}\r\n\r\nreturn(\r\n    <form>\r\n       <div className=\"modeldata\">\r\n          <form>\r\n              <div className=\"taskname\">\r\n                <label>\r\n                    Name:\r\n                </label>\r\n                <div>{props.task}</div>\r\n              </div>\r\n              <div className=\"taskDesc\">\r\n                <label>\r\n                    Description:\r\n                </label>\r\n                <div>\r\n                <textarea\r\n                    rows={6}\r\n                    type=\"text\"\r\n                    maxLength=\"200\"\r\n                    value = {props.desc}\r\n                    onChange={(e) => dsccschange(e, props._key)}\r\n                />\r\n                <label>Characters left:</label>\r\n                <p>{props.lenght}</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"taskstatus\">\r\n                <label>\r\n                     Status:    \r\n                </label>\r\n                 <select value={props.cpmstate} onChange={(e) => cardstateChange(e, props._key)}>\r\n                     {options.map((option) => (\r\n                     <option key={option} value={option}>\r\n                     {option}\r\n                    </option>\r\n                     ))}\r\n                 </select>\r\n              </div>\r\n              <div className=\"taskstart\">\r\n                 <label>\r\n                     Created on:\r\n                 </label>\r\n                 <div>{props.startdt}</div>\r\n              </div>   \r\n              <div className=\"taskend\">\r\n                 <label>\r\n                     Closed on:\r\n                 </label>\r\n                 <div>{props.enddt}</div>\r\n              </div>\r\n              <div className=\"savebutton\">  \r\n                  <button onClick={(e) => savehandle(e, props._key)}>save</button>\r\n              </div> \r\n              <div className=\"closebutton\">  \r\n                  <button  onClick={(e) => closehandle(e, props._key)}>close</button>\r\n              </div>              \r\n          </form>\r\n       </div>\r\n    </form>\r\n)\r\n}\r\n\r\n\r\nexport default Modal;"]},"metadata":{},"sourceType":"module"}