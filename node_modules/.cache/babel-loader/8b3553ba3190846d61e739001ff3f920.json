{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactJS\\\\react-to-do\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport './App.css';\nimport Modal from \"./modal\";\nimport View from \"./view\";\nimport Completedview from \"./completedview\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const wrapperRef = useRef(null);\n  const [keycount, setKeycount] = useState(0);\n  const [name, setName] = useState([]);\n  const [ele, setEle] = useState('');\n  const [clickstate, setClickstate] = useState([]);\n  const [modelstate, setModelstate] = useState([]);\n  const [charele, setCharele] = useState('');\n  const [charleft, setCharleft] = useState([]);\n  const [currentdate, setCurrentdate] = useState('');\n  const [enddate, setEnddate] = useState([]);\n  const [cardstate, setCardstate] = useState([]);\n  const [descele, setDescele] = useState('');\n  const [descstate, setDescstate] = useState([]);\n  const [viewstate, setViewstate] = useState([]);\n  const [completname, setCompletname] = useState([]);\n  const [completclickstate, setCompletclickstate] = useState([]);\n  const [completviewstate, setCompletviewstate] = useState([]);\n  useEffect(() => {\n    document.addEventListener(\"click\", handleClickOutside, false);\n    return () => {\n      document.removeEventListener(\"click\", handleClickOutside, false);\n    };\n  }, []);\n\n  const handleClickOutside = event => {\n    if (wrapperRef.current && !wrapperRef.current.contains(event.target)) {\n      const rstst = [...clickstate];\n      rstst.push(false);\n      setClickstate(rstst);\n      const resetst = [...completclickstate];\n      resetst.push(false);\n      setCompletclickstate(resetst);\n    }\n  };\n\n  function keyChange(e) {\n    setEle(e.target.value);\n  }\n\n  function handleChange(event) {\n    event.preventDefault();\n    const namelist = [...name];\n    let input = {\n      key: keycount,\n      value: ele\n    };\n    var current = new Date();\n    var isodate = current.toISOString();\n    const ctdate = [...currentdate];\n    ctdate[keycount] = isodate;\n    setCurrentdate(ctdate);\n    const ennddt = [...enddate];\n    ennddt.push(\"Yet to Close\");\n    setEnddate(ennddt);\n    setKeycount(keycount + 1);\n    namelist.push(input);\n    setName(namelist);\n    setEle(''); //const clkst= [...clickstate]\n    //clkst.push(false);\n    //setClickstate(clkst);\n\n    const modst = [...modelstate];\n    modst.push(false);\n    setModelstate(modst);\n    const vwst = [...viewstate];\n    vwst.push(false);\n    setViewstate(vwst);\n  }\n\n  function handlemenu(key) {\n    const newarr = [...clickstate];\n    newarr[key] = !newarr[key];\n    setClickstate(newarr);\n  }\n\n  function handledelete(key) {\n    let names = [...name];\n    names = names.filter(el => el.key !== key);\n    setName(names);\n    const delarr = [...clickstate];\n    delarr[key] = !delarr[key];\n    setClickstate(delarr);\n  }\n\n  function showmodal(key) {\n    const modarr = [...modelstate];\n    modarr[key] = !modarr[key];\n    setModelstate(modarr);\n    const shmdarr = [...clickstate];\n    shmdarr[key] = !shmdarr[key];\n    setClickstate(shmdarr);\n    setCharleft(200);\n    const cdst = [...cardstate];\n    cdst[key] = \"Inprogress\";\n    setCardstate(cdst);\n    const descload = [...descstate];\n    setDescele(descload[key]);\n\n    if (descstate[key] === undefined) {\n      setCharele(200);\n    } else {\n      const rmglg = 200 - descstate[key].length;\n      setCharele(rmglg);\n      setCharleft(rmglg);\n    }\n  }\n\n  function getcharlenght(e, k) {\n    const charcount = e.target.value.length;\n    const charlength = 200 - charcount;\n    setCharleft(charlength);\n    setDescele(e.target.value);\n  }\n\n  function closemodal(p) {\n    const clmod = [...modelstate];\n    clmod[p] = !clmod[p];\n    setModelstate(clmod);\n    const cdst = [...cardstate];\n    cdst[p] = \"Inprogress\";\n    setCardstate(cdst);\n    setDescele('');\n  }\n\n  function statecard(e, k) {\n    const cdst = [...cardstate];\n    cdst[k] = e;\n    setCardstate(cdst);\n  }\n\n  function savemodal(e, k) {\n    if (cardstate[k] === \"Inprogress\") {\n      const descstt = [...descstate];\n      descstt[k] = descele;\n      setDescstate(descstt);\n      const svmod = [...modelstate];\n      svmod[k] = !svmod[k];\n      setModelstate(svmod);\n    } else {\n      const cmpnm = [...completname];\n      const mvnm = [...name];\n      var result = mvnm.find(({\n        key\n      }) => key === k);\n      let inpcom = {\n        key: k,\n        value: result.value\n      };\n      cmpnm.push(inpcom);\n      setCompletname(cmpnm);\n      let nmsbm = [...name];\n      nmsbm = nmsbm.filter(el => el.key !== k);\n      setName(nmsbm);\n      var current = new Date();\n      var isodates = current.toISOString();\n      const cmenddate = [...enddate];\n      cmenddate[k] = isodates;\n      setEnddate(cmenddate);\n      const svmod = [...modelstate];\n      svmod[k] = !svmod[k];\n      setModelstate(svmod);\n      const cmpvwst = [...completviewstate];\n      cmpvwst.push(false);\n      setCompletviewstate(cmpvwst);\n    }\n  }\n\n  function viewmodal(k) {\n    const viewarr = [...viewstate];\n    viewarr[k] = !viewarr[k];\n    setViewstate(viewarr);\n    const vdarr = [...clickstate];\n    vdarr[k] = !vdarr[k];\n    setClickstate(vdarr);\n  }\n\n  function closeview(p) {\n    const clvw = [...viewstate];\n    clvw[p] = !clvw[p];\n    setViewstate(clvw);\n  }\n\n  function handlecomplettmenu(k) {\n    const cmclk = [...completclickstate];\n    cmclk[k] = !cmclk[k];\n    setCompletclickstate(cmclk);\n  }\n\n  function viewcmpmodal(k) {\n    const cviewarr = [...completviewstate];\n    cviewarr[k] = !cviewarr[k];\n    setCompletviewstate(cviewarr);\n    const cvdarr = [...completclickstate];\n    cvdarr[k] = !cvdarr[k];\n    setCompletclickstate(cvdarr);\n  }\n\n  function closecmplview(k) {\n    alert(\"will close\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Tasklist\",\n    ref: wrapperRef,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Task list\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Your Tasks\",\n          value: ele,\n          onChange: keyChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          onClick: handleChange,\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        className: \"heading_pending\",\n        children: \"InProgress:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"Pendingform\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"body\",\n          children: name.slice(0).reverse().map((_el, i) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"card_pending\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: _el.value\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 39\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"button\",\n                  onClick: () => handlemenu(_el.key),\n                  children: \"\\u2630\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 39\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 37\n              }, this), clickstate[_el.key] === true && modelstate[_el.key] === false && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"dropdown\",\n                children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                    onClick: () => viewmodal(_el.key),\n                    children: \"View\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 234,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    onClick: () => showmodal(_el.key),\n                    children: \"Edit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 235,\n                    columnNumber: 43\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    onClick: () => handledelete(_el.key),\n                    children: \"Delete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 236,\n                    columnNumber: 43\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 39\n              }, this), modelstate[_el.key] === true && /*#__PURE__*/_jsxDEV(Modal, {\n                className: \"modpop\",\n                task: _el.value,\n                chrlg: getcharlenght,\n                lenght: charleft,\n                startdt: currentdate[_el.key],\n                enddt: enddate[_el.key],\n                _key: _el.key,\n                closemod: closemodal,\n                cardst: statecard,\n                cpmstate: cardstate[_el.key],\n                desc: descele,\n                save: savemodal\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 39\n              }, this), viewstate[_el.key] === true && /*#__PURE__*/_jsxDEV(View, {\n                className: \"viewpop\",\n                vtask: _el.value,\n                _key: _el.key,\n                vstartdt: currentdate[_el.key],\n                venddt: enddate[_el.key],\n                vstatus: cardstate[_el.key],\n                vdesc: descstate[_el.key],\n                viewmod: closeview\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 39\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 36\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 18\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        className: \"heading_Completed\",\n        children: \"Completed:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"Completedform\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"body\",\n          children: completname.slice(0).reverse().map((_elem, i) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"card_Complete\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: _elem.value\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 278,\n                  columnNumber: 39\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"Completebutton\",\n                  onClick: () => handlecomplettmenu(_elem.key),\n                  children: \"\\u2630\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 279,\n                  columnNumber: 39\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 37\n              }, this), completclickstate[_elem.key] === true && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"completdropdown\",\n                children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                    onClick: () => viewcmpmodal(_elem.key),\n                    children: \"View\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 286,\n                    columnNumber: 43\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: \"Delete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 287,\n                    columnNumber: 43\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 285,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 37\n              }, this), completviewstate[_elem.key] === true && /*#__PURE__*/_jsxDEV(Completedview, {\n                className: \"completpop\",\n                cvtask: _elem.value,\n                _key: _elem.key,\n                cvstartdt: currentdate[_elem.key],\n                cvenddt: enddate[_elem.key],\n                cvstatus: cardstate[_elem.key],\n                cvdesc: descstate[_elem.key],\n                cmplviewmod: closecmplview\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 43\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 36\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 8\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 208,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"XKSYljKFDA9MKKAHhcRyeaWrmwQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/ReactJS/react-to-do/src/App.js"],"names":["React","useState","useRef","useEffect","Modal","View","Completedview","App","wrapperRef","keycount","setKeycount","name","setName","ele","setEle","clickstate","setClickstate","modelstate","setModelstate","charele","setCharele","charleft","setCharleft","currentdate","setCurrentdate","enddate","setEnddate","cardstate","setCardstate","descele","setDescele","descstate","setDescstate","viewstate","setViewstate","completname","setCompletname","completclickstate","setCompletclickstate","completviewstate","setCompletviewstate","document","addEventListener","handleClickOutside","removeEventListener","event","current","contains","target","rstst","push","resetst","keyChange","e","value","handleChange","preventDefault","namelist","input","key","Date","isodate","toISOString","ctdate","ennddt","modst","vwst","handlemenu","newarr","handledelete","names","filter","el","delarr","showmodal","modarr","shmdarr","cdst","descload","undefined","rmglg","length","getcharlenght","k","charcount","charlength","closemodal","p","clmod","statecard","savemodal","descstt","svmod","cmpnm","mvnm","result","find","inpcom","nmsbm","isodates","cmenddate","cmpvwst","viewmodal","viewarr","vdarr","closeview","clvw","handlecomplettmenu","cmclk","viewcmpmodal","cviewarr","cvdarr","closecmplview","alert","slice","reverse","map","_el","i","_elem"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect} from 'react';\nimport './App.css';\nimport Modal from \"./modal\"\nimport View from \"./view\"\nimport Completedview from \"./completedview\"\n\n\n\nfunction App() {\n  const wrapperRef = useRef(null);  \n  const [keycount, setKeycount] = useState(0);\n  const [name, setName] = useState([]);\n  const [ele, setEle] = useState('');\n  const [clickstate, setClickstate] = useState([]);\n  const [modelstate, setModelstate] = useState([]);\n  const [charele, setCharele] = useState('');\n  const [charleft, setCharleft] = useState([]);\n  const [currentdate, setCurrentdate] = useState('');\n  const [enddate, setEnddate] = useState([]);\n  const [cardstate, setCardstate] = useState([]);\n  const [descele, setDescele] = useState('');\n  const [descstate, setDescstate] = useState([]);\n  const [viewstate, setViewstate] = useState([]);\n  const [completname, setCompletname] = useState([]);\n  const [completclickstate, setCompletclickstate] = useState([]);\n  const [completviewstate, setCompletviewstate] = useState([]);\n  \n  useEffect(() => {\n    document.addEventListener(\"click\", handleClickOutside, false);\n    return () => {\n      document.removeEventListener(\"click\", handleClickOutside, false);\n    };\n  }, []);\n\n\n const handleClickOutside = event => {\n    if (wrapperRef.current && !wrapperRef.current.contains(event.target)) {\n      const rstst = [...clickstate]\n      rstst.push(false);\n      setClickstate(rstst);\n      const resetst = [...completclickstate]\n      resetst.push(false);\n      setCompletclickstate(resetst);\n    }\n  };\n  function keyChange(e) {\n    setEle(e.target.value);\n  }\n\n  function handleChange(event) {\n    event.preventDefault();\n    const namelist= [...name];\n    let input = { key: keycount, value: ele}\n    var current = new Date();\n    var isodate = current.toISOString();\n    const ctdate = [...currentdate];\n    ctdate[keycount] = isodate;\n    setCurrentdate(ctdate);\n    const ennddt = [...enddate];\n    ennddt.push(\"Yet to Close\");\n    setEnddate(ennddt);\n    setKeycount(keycount + 1);\n    namelist.push(input);\n    setName(namelist);\n    setEle('');\n    //const clkst= [...clickstate]\n    //clkst.push(false);\n    //setClickstate(clkst);\n    const modst= [...modelstate]\n    modst.push(false);\n    setModelstate(modst); \n    const vwst = [...viewstate]\n    vwst.push(false);\n    setViewstate(vwst);\n\n }\n\n\nfunction handlemenu(key){\n  const newarr = [...clickstate]\n  newarr[key] = !newarr[key];\n  setClickstate(newarr);\n}\n\nfunction handledelete(key){\n  let names = [...name];\n  names = names.filter(el => el.key !== key);\n  setName(names); \n  const delarr = [...clickstate]\n  delarr[key] = !delarr[key];\n  setClickstate(delarr);\n}\n\nfunction showmodal(key) {\n  const modarr= [...modelstate]\n  modarr[key] = !modarr[key];\n  setModelstate(modarr);\n  const shmdarr = [...clickstate]\n  shmdarr[key] = !shmdarr[key];\n  setClickstate(shmdarr);\n  setCharleft(200);    \n  const cdst = [...cardstate];\n  cdst[key] = \"Inprogress\"\n  setCardstate(cdst); \n  const  descload = [...descstate];\n  setDescele(descload[key]);\n  if(descstate[key] === undefined) {\n\n    setCharele(200);\n  }else{\n    const rmglg = 200 - descstate[key].length;\n    setCharele(rmglg);\n  \n    setCharleft(rmglg);\n  }\n}\n\nfunction getcharlenght(e, k) {\n  const charcount = e.target.value.length;\n  const charlength = 200 - charcount;\n  setCharleft(charlength);\n  setDescele(e.target.value);\n}\n\nfunction closemodal(p) {\n  const clmod = [...modelstate];\n  clmod[p] = !clmod[p];\n  setModelstate(clmod);\n  const cdst = [...cardstate];\n  cdst[p] = \"Inprogress\"\n  setCardstate(cdst); \n  setDescele('');\n}\n\nfunction statecard(e, k) {\n  const cdst = [...cardstate];\n  cdst[k] = e;\n  setCardstate(cdst);\n\n}\n\nfunction savemodal(e, k) {\n if (cardstate[k] === \"Inprogress\"){\n  const  descstt = [...descstate];\n  descstt[k] = descele;\n  setDescstate(descstt);\n  const svmod = [...modelstate];\n  svmod[k] = !svmod[k];\n  setModelstate(svmod);\n } else {\n   const cmpnm = [ ...completname];\n   const mvnm = [...name]\n   var result = mvnm.find( ({ key }) => key === k);\n   let inpcom = { key: k, value: result.value}\n   cmpnm.push(inpcom);\n   setCompletname(cmpnm);\n   let nmsbm = [...name];\n   nmsbm = nmsbm.filter(el => el.key !== k);\n   setName(nmsbm);\n   var current = new Date();\n   var isodates = current.toISOString();\n   const cmenddate = [...enddate];\n   cmenddate[k] = isodates;\n   setEnddate(cmenddate);\n   const svmod = [...modelstate];\n   svmod[k] = !svmod[k];\n   setModelstate(svmod);\n   const cmpvwst = [...completviewstate]\n   cmpvwst.push(false);\n   setCompletviewstate(cmpvwst);\n }\n}\n\nfunction viewmodal(k) {\n  const viewarr= [...viewstate]\n  viewarr[k] = !viewarr[k];\n  setViewstate(viewarr);\n  const vdarr = [...clickstate]\n  vdarr[k] = !vdarr[k];\n  setClickstate(vdarr);\n}\n\nfunction closeview(p) {\n  const clvw = [...viewstate];\n  clvw[p] = !clvw[p];\n  setViewstate(clvw);\n}\n\nfunction handlecomplettmenu(k) {\n  const cmclk = [...completclickstate]\n  cmclk[k] = !cmclk[k];\n  setCompletclickstate(cmclk);\n}\n\nfunction viewcmpmodal(k) {\n  const cviewarr= [...completviewstate]\n  cviewarr[k] = !cviewarr[k];\n  setCompletviewstate(cviewarr);\n  const cvdarr = [...completclickstate]\n  cvdarr[k] = !cvdarr[k];\n  setCompletclickstate(cvdarr);\n}\n\nfunction closecmplview(k) {\n  alert(\"will close\");\n}\n  return (\n    <div className=\"Tasklist\" ref={wrapperRef}>\n       <form>\n                <div className=\"header\" >\n                    <h3>Task list</h3>\n                    <input type=\"text\"\n                           placeholder=\"Your Tasks\"\n                           value={ele}\n                           onChange={keyChange}\n                           />\n                     <button type=\"submit\" onClick={handleChange}>Add</button>\n                 </div> \n                 <h6 className=\"heading_pending\">InProgress:</h6>\n                 <form className=\"Pendingform\">\n                 <div className=\"body\">\n                      {\n                          name.slice(0).reverse().map((_el, i) => {\n                            return <div>\n                                    <ul className=\"card_pending\">\n                                      <div>{_el.value}</div>\n                                      <button type=\"button\" className=\"button\" onClick={() => handlemenu(_el.key)}>\n                                      ☰\n                                      </button>\n                                    </ul>\n                                     {clickstate[_el.key] === true && modelstate[_el.key] === false &&\n                                      <div className=\"dropdown\">\n                                        <ul>\n                                        <li onClick={() => viewmodal(_el.key)}>View</li>\n                                          <li onClick={() => showmodal(_el.key)}>Edit</li>\n                                          <li onClick={() => handledelete(_el.key)}>Delete</li>\n                                        </ul>\n                                      </div>\n                                      }\n                                      {modelstate[_el.key] === true &&\n                                      <Modal className=\"modpop\" \n                                             task={_el.value} \n                                             chrlg={getcharlenght} \n                                             lenght={charleft} \n                                             startdt={currentdate[_el.key]} \n                                             enddt={enddate[_el.key]} \n                                             _key={_el.key} \n                                             closemod={closemodal} \n                                             cardst={statecard} \n                                             cpmstate={cardstate[_el.key]} \n                                             desc={descele} \n                                             save={savemodal}/>\n                                      }\n                                      {viewstate[_el.key] === true &&\n                                      <View className=\"viewpop\" \n                 \n                                      vtask={_el.value} \n                                             _key={_el.key} \n                                             vstartdt={currentdate[_el.key]}  \n\t\t\t\t\t\t\t\t\t\t\t                       venddt={enddate[_el.key]} \n                                             vstatus={cardstate[_el.key]} \n                                             vdesc={descstate[_el.key]} \n\t\t\t\t\t\t\t\t\t\t\t                       viewmod={closeview}/>\n                                        }\n                                      \n                                      </div>\n                          })\n                        }\n                 </div>\n                </form>\n                  <h6 className=\"heading_Completed\">Completed:</h6>\n                    <form className=\"Completedform\">\n                      <div className=\"body\">\n                      {\n                          completname.slice(0).reverse().map((_elem, i) => {\n                            return <div>\n                                    <ul className=\"card_Complete\">\n                                      <div>{_elem.value}</div>\n                                      <button type=\"button\" className=\"Completebutton\" onClick={() => handlecomplettmenu(_elem.key)}>\n                                      ☰\n                                      </button>  \n                                    </ul>\n                                    {completclickstate[_elem.key] === true &&   \n                                    <div className=\"completdropdown\">                            \n                                        <ul>\n                                          <li onClick={() => viewcmpmodal(_elem.key)}>View</li>\n                                          <li>Delete</li>\n                                        </ul>\n                                      </div>\n                                      }\n                                      {completviewstate[_elem.key] === true &&\n                                          <Completedview className=\"completpop\" \n                                                cvtask={_elem.value} \n                                                _key={_elem.key} \n                                                cvstartdt={currentdate[_elem.key]}  \n\t                                              cvenddt={enddate[_elem.key]} \n                                                cvstatus={cardstate[_elem.key]} \n                                                cvdesc={descstate[_elem.key]} \n                                                cmplviewmod={closecmplview}/>\n                                       }\n                                    </div>\n                            })\n                          }  \n                      </div>\n                    </form>\n        </form>\n      \n\n    </div>\n    \n\n  );\n  \n  \n  \n}\n\n\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}